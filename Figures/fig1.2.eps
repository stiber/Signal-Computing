%!PS-Adobe-3.0 EPSF-3.0%%BoundingBox: 77 303 713 521%%Title: (fig1.2)%%Creator: (AppleWorks: LaserWriter 8 8.7)%%CreationDate: (1:54 PM Monday, April 22, 2002)%%For: (Michael Stiber)%%Routing: (mailto:\000stiber@mac.com)%%Pages: 1%%DocumentFonts: %%DocumentNeededFonts: %%DocumentSuppliedFonts: %%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Landscape%%DocumentMedia: (Default) 792 612 0 () ()%RBINumCopies: 1%RBINupNess: 1 1%ADO_ImageableArea: 31 30 761 582%RBIDocumentSuppliedFonts: %%EndComments%%BeginDefaults%%ViewingOrientation: 0 -1 1 0%%EndDefaultsuserdict/dscInfo 5 dict dup begin/Title(fig1.2)def/Creator(AppleWorks: LaserWriter 8 8.7)def/CreationDate(1:54 PM Monday, April 22, 2002)def/For(Michael Stiber)def/Pages 1 defend put%%BeginProlog/md 163 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: lw8_feature-1.01%%Copyright: Copyright 1990-1999 Adobe Systems Incorporated and Apple Computer Incorporated. All Rights Reserved./bd{bind def}bind def/ld{load def}bd/xs{exch store}bd/Z{0 def}bd/T true def/F false def/level2/languagelevel where{pop languagelevel 2 ge}{F}ifelsedef/odictstk Z/oopstk Z/fcl{count oopstk sub dup 0 gt{{pop}repeat}{pop}ifelsecountdictstack odictstk sub dup 0 gt{{end}repeat}{pop}ifelse}bd/sfcl2{/odictstk countdictstack storecount/oopstk xs}bd/efcl2{stopped{$error/newerror F put}iffcl}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bd/setcopies{level2{1 dict begin/NumCopies exch def currentdict end setpagedevice}{userdict/#copies 3 -1 roll put}ifelse}deflevel2 startnoload/ststpgdev{}def/dopgdev{}def/stpgdev{}def/buf Z/didstop T def/sfcl{/didstop T store/odictstk countdictstack storecount/oopstk xscurrentfile cvx stopped{$error/newerror F putdidstop{save/didstop xs/buf vmstatus exch sub exch pop dup 0 lt{pop 0}ifdup 64000 gt{pop 64000}if string store{currentfile buf readline{(}efcl)eq{exit}if}{/UnexpectedEOF errordict/rangecheck get exec}ifelse}loopdidstop restore}if}iffcl}bd/efcl{/didstop F storeexecstop}bdlevel2 endnoload level2 not startnoload/setpagedevice where{pop/realstpgdev/setpagedevice ld}if/SC_topddict Z/SC_spdict Z/$spusrdict F def/dopgdev{userdict/setpagedevice undef$spusrdict{userdict/setpagedevice/realstpgdev load put/$spusrdict F store}ifSC_topddict realstpgdev}bd/stpgdev{SC_topddict dup 3 -1 roll{SC_spdict 2 index known{SC_spdict 2 index getdup 3 -1 roll{put dup}forallpop put dup}{put dup}ifelse}forallpop pop}bd/ststpgdev{/setpagedevice where{userdict eq{/$spusrdict T store}if}ifuserdict/setpagedevice/stpgdev load put/SC_topddict 0 dict store/SC_spdict 3 dict begin/InputAttributes 0 dict def/Policies 0 dict def/OutputAttributes 0 dict defcurrentdictendstore}def/sfcl/sfcl2 ld/efcl/efcl2 ldlevel2 not endnoload%%EndFile%%BeginFile: lw8_basic-4.0/xdf{exch def}bd/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath12{ld}repeat/framewidth -1 def/QDframwid -1 def/numframes Z/mTS matrix def/$m matrix def/av 87 def/por T def/normland F def/psb-nosave{}def/pse-nosave{}def/us Z/psb{/us save store}bd/pse{us restore}bd/level3/languagelevel where{pop languagelevel 3 ge}{F}ifelsedeflevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/devg/DeviceGray def/devr/DeviceRGB def/devc/DeviceCMYK deflevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/devg[/DeviceGray]def/devr[/DeviceRGB]def/devc[/DeviceCMYK]deflevel2 not endnoload/pm Z/mT Z/sD Z/mTSsetup{mT $m currentmatrix mTS concatmatrix pop}bd/pmSVsetup{/pm save store}bd/initializepage{mT concat}bd/endp{pm restore}bd/adjRect{dup 2 mul 6 2 roll4 index sub exch 5 -1 roll sub exch4 2 roll4 index add exch 5 -1 roll add exch4 2 roll}bd/frame1up{gSmTS setmatrixQDframwid lw/setstrokeadjust where{pop T setstrokeadjust}ifclippath pathbbox2 index sub exch3 index sub exchcurrentlinewidth framewidth muladjRectnumframes dup 0 lt{pop 0}if{4 copyrScurrentlinewidth framewidthmul 4 muladjRect}repeatpop pop pop popgR}bd/$c devr def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFilelevel3 startnoload%%BeginFile: lw8_safeclipL12-1.0/rectclip where{pop/rCa/rectclip ld}{/rCa{np 01 index length 4 idiv{2 copy4 getintervalaload pop4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:K4 add}repeatclip nppop pop}bd}ifelse/savedstack Z/subsavedstack Z/execstring Z/saferCa{/execstring xs/odictstk countdictstack store/oopstk 0 storecount 0 ne{savedstack 0 eq{count 100 gt{count}{100}ifelsearray/savedstack xs}{count savedstack length gt{count array/savedstack xs}if}ifelsecount savedstack 0 3 -1 rollgetintervalastore/subsavedstack xs}{/subsavedstack 0 store}ifelseexecstring cvx stopped{$error/newerror F putnewpath}iffclsubsavedstack 0 ne{subsavedstack aload pop}if}bd%%EndFilelevel3 endnoload level3 not startnoload%%BeginFile: lw8_safeclipL3-1.0/saferCa/pop ld%%EndFilelevel3 not endnoload%%BeginFile: lw8_level1_colorspace-2.0/G/setgray ld/:F1/setgray ld/:F/setrgbcolor ld/:F4/setcmykcolor where{pop/setcmykcolor ld}{{3{dup3 -1 roll adddup 1 gt{pop 1}if1 exch sub4 1 roll}repeatpopsetrgbcolor}bd}ifelse/:Fx{counttomark{0{G}0{:F}{:F4}}exch getexecpop}bd/$cs Z/:rg{devr :ss}bd/:sc{$cs :ss}bd/:dc{dup type/arraytype eq{0 get}ifdup/DeviceCMYK eq{pop devc}{/DeviceGray eq{devg}{devr}ifelse}ifelse/$cs xdf}bd/:sgl{}def/:dr{}bd/:fCRD{pop}bd/:ckcs{}bd/:ss{/$c xdf}bd%%EndFile%%BeginFile: lw8_uniform_graphics-2.0/@a{np :M 0 rl :L 0 exch rl 0 rl :L fill}bd/@b{np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill}bd/@c{moveto 0 rlineto stroke}bd/@w{moveto 0 exch rlineto stroke}bd/arct where{pop}{/arct{arcto pop pop pop pop}bd}ifelse/x1 Z/x2 Z/y1 Z/y2 Z/rad Z/@q{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arctfill}bd/@s{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arct:Kstroke}bd/@i{np 0 360 arc fill}bd/@j{gSnp:Tscale0 0 .5 0 360 arcfillgR}bd/@e{np0 360 arc:Kstroke}bd/@f{np$m currentmatrixpop:Tscale0 0 .5 0 360 arc:K$m setmatrixstroke}bd/@k{gSnp:T0 0 :M0 0 5 2 rollarc fillgR}bd/@l{gSnp:T0 0 :Mscale0 0 .5 5 -2 roll arcfillgR}bd/@m{nparcstroke}bd/@n{np$m currentmatrixpop:Tscale0 0 .5 5 -2 roll arc$m setmatrixstroke}bd%%EndFile/currentpacking where {pop sc_oldpacking setpacking}if end%%EndProlog%%BeginSetupmd begin/mT[1 0 0 -1 31 582]def/sD 16 dict def{/Courier findfont[10 0 0 -10 0 0]:mf setfont}stopped{$error/newerror F put}if%PostScript Hack by Mike Brors 12/7/90/DisableNextSetRGBColor	{	userdict begin	/setrgbcolor 		{		pop		pop		pop		userdict begin		/setrgbcolor systemdict /setrgbcolor get def		end		} def	end} bind def/bcarray where {	pop	bcarray 2 {		/da 4 ps div def		df setfont gsave cs wi		1 index 0 ne{exch da add exch}if grestore setcharwidth		cs 0 0 smc da 0 smc da da smc 0 da smc c		gray		{ gl}		{1 setgray}ifelse		da 2. div dup moveto show	}bind put} if%% Used to snap to device pixels, 1/4th of the pixel in./stp {  % x y  pl  x y                % Snap To Pixel, pixel  (auto stroke adjust)	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} bind def/snapmoveto { % x y  m  -             % moveto, auto stroke adjust	stp  moveto} bind def/snaplineto { % x y  l  -             % lineto, auto stroke adjust	stp lineto} bind def%%EndSetup%%Page: 1 1%%BeginPageSetupmTSsetuppmSVsetupinitializepage%%EndPageSetupgS 0 0 730 552 rC.867 G46 61 336 279 18 @q0 G2 lw47 62 335 278 17 @s0 .2 1 :F290 46 105 @c0 G0 .2 1 :F290 46 148 @c0 G0 .2 1 :F290 46 191 @c0 G0 .8 1 :F-1 -1 47 148 1 1 334 104 @b0 G0 .8 1 :F-1 -1 47 191 1 1 334 147 @b0 G.667 0 0 :F290 46 126 @c0 G.667 0 0 :F290 46 170 @c0 G.667 0 0 :F290 46 83 @c0 G1 .6 .6 :F-1 -1 47 126 1 1 334 82 @b0 G1 .6 .6 :F-1 -1 47 170 1 1 334 125 @b0 G1 .6 .6 :F-1 -1 47 213 1 1 334 169 @b0 G.667 0 0 :F290 46 213 @c0 G.667 0 0 :F290 46 256 @c0 G0 .2 1 :F290 46 234 @c0 G0 .8 1 :F-1 -1 47 234 1 1 334 190 @b0 G1 .6 .6 :F-1 -1 47 256 1 1 334 212 @b0 G0 .8 1 :F46 105 -1 1 335 255 1 46 104 @a0 G1 .6 .6 :F46 83 -1 1 335 233 1 46 82 @a0 G.867 G392 61 682 279 18 @q0 G393 62 681 278 17 @s0 .533 0 :F290 392 148 @c0 G0 .533 0 :F290 392 191 @c0 G0 .533 0 :F290 392 126 @c0 G0 .533 0 :F290 392 170 @c0 G0 .533 0 :F290 392 83 @c0 G0 .533 0 :F290 392 213 @c0 G0 .533 0 :F290 392 256 @c0 G0 .533 0 :F290 392 234 @c0 G0 .533 0 :F290 392 105 @c0 G.4 1 .4 :F-1 -1 395 106 1 1 681 82 @b0 G.4 1 .4 :F-1 -1 393 128 1 1 678 105 @b0 G.4 1 .4 :F-1 -1 393 171 1 1 678 147 @b0 G.4 1 .4 :F-1 -1 393 148 1 1 678 125 @b0 G.4 1 .4 :F-1 -1 393 213 1 1 678 190 @b0 G.4 1 .4 :F-1 -1 393 194 1 1 678 170 @b0 G.4 1 .4 :F-1 -1 393 256 1 1 678 232 @b0 G.4 1 .4 :F-1 -1 393 236 1 1 678 212 @b0 G.4 1 .4 :F392 83 -1 1 682 255 1 392 82 @aendpshowpage%%PageTrailer%%Trailerend%%EOF