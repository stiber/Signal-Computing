%!PS-Adobe-2.0 EPSF-1.2%%Title: raster.FH11%%Creator: FreeHand 10.0%%CreationDate: 3/23/04 12:02 PM%%BoundingBox: 0 0 636 218%%FHPathName:stiber:Documents:Classes:CSS457:ebook:ch-physical:raster.FH11%ALDOriginalFile:stiber:Documents:Classes:CSS457:ebook:ch-physical:raster.FH11%ALDBoundingBox: 0 0 636 218%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%EndComments%%BeginAGDEmbeddedDoc: version 1.0%:s8W,W5t==$^::es!!!GPGQG4@$^apo(!"odG8O_"(dMJJf0rM:%:!!!R]!!$Dk5nITq?lmMl0t]+?,p30fNu:DbWc@/&(Zp9)G<jYu!!#?k/:/3;>%I(G8.Dm1fa@c[V)P4g#b%,lO\ogrLhM,5!!'41pHEenI88ZihcFI)HiF-IkNoVNriIpVl^W=I:kJO?'*&$7UGQO1777IQZEfT_GrWeD!1(mhb;4KmKFbP]95W0P/H>dX!O`.1e7RF.*u%7-D.1Nd!2h#E%anMl]><i#%iO_X;?-]PoVnjZC#CaV%:55N4k;1P)=;K39K!;Z+>?RUf=&EUY*&G<p^7fWOO/)d7BM6Rpu5'(YQ'&GDE!.ChD.C/;Vc.=%(I(>Q?#64a)6Om>2SZ,%WMPELc$KM]t!'=Kn\G^DHLjfS*0b'pE1]RMXI"@PA)'S/:Tu?IVI&k*a!0_ci<9gfh([])^e\-i'/-#Y^A]i-.frSq".k7T[U+-6F!$U1'9m1o;npbaZq;&+M[f?CBE.>P.buL,B22;lCA]"0A\kN]U%:!<6e!eB3m`K)rf6K3?Ba2#mW<buS4e)B2tI(?P*]j=8.L!4Dr-ZNm,,b(A*%+uioc/cYmk*(q4e@ugRFNmA6Lr>05L!-8'edY;D4(OKXe/)@[<.0'@*:9'-ajk;(:>PjcN<\eXp!46[PdP7Yb_TCU0kM#&Xjo>D"nO"[aF;t8!A'@]Yb-b4L!:G[n%l2IiC1V0C6^:,2dJs9F^7c5'a@`V'c%]5%2`@Z9!0M>&0B1ieEjIoT<PVap%:OBn.*1&q<QmTIE/GcCDVBZ)^e.2#b`!+1,X+gDKMTeq^#BK2Q@_uKeXM*+@6E&lha_+9RrbK((l!3@hHarJ7;G-pI+MpYuc/cYl"*Oq%bUZ2KJVlch>,1fiq!;94qR_VM($LQR:f1DHO49,@RLiA@P_j2*VVqZ7(/**u9!7`7J"H?H7&@BUk\*K=)ci=&q+'O2<.Ii]%*(0?1[M`BO!8h$C/f#C7[/'nM<^u7N3<0%b5\&KM!*=s5%:2STKl:qW`P9<.:X!4(0t-J@)'f`d:=N-Cm\NrT0WG80I/-'@f\OtSoWkT[S<!*Jn<hqNiA(Sf'<oX41rP5kT/0WqN7?L6khrDh2jG+ZhU!3A=r7Cs8@M%YZh5Ad;idJs7tOs54CN.#j5P/=Qn[0jSI!*8D4&GT_C.G1Vrl0;)7<WE,ZF90$5*n8$tI*>1nDEqA*!&6._<$V(p$!L$!BlYpd4TGJRD5;*%:GX[TC?+rXRtI+/D[S2[%:!+9S+I%>tY#;,.ShRG2oZ2akKZ_]7]Uq*%7_Kc(NBaMcZ!5FHG0ct6l;KFack2<\kg].=hjjoH$nb5/Zb;&RIL"\-Z!"3f0ld@%f0;=/B'$!O(H2mr0'"CP4IkOMQ'-LB0oW0qN!#^3YAHu:Jdi"nV(X\-5eGoT8*Tl"AAn[CUWa2*9L\6u6!5O8J7+!_>9^J88)LZq`-3+$UH5n8R7',1+3CYOUKc;08!/3MG6ZEk^M5"M-]>Kq=%:4?_@$BE/$u)n<A1#4?NaGY?I/9^lKk!#[a)Q6&#Xg\%IS@,hntMuWk'/'?p&.Yg#c0EbUCQ@cFC!),BA/'>CAQ'c3bk+G7)Q2goZEgX1b+kVt-!)B;.$KF)G!*`<W3OWZ4MM,IgqSK1=$NL0fAQ*7nYETsL?A85o'm=Qs!$(kZ<+NG>RZ/M">DgR3c2[jp!G=8LD\LF336k:DYuPiF!)Op\9-]sN"Is(CXqAsP3!]N0F.-TOWQ6tR%:#"CSS!@J&r)W;*a!!)&dBo]<aK-K8V)W@b*3,&?mE7PD0=<(t6k1H[o-k_Q:!!&r;?A%ScDb6b94BucC52lPBVBBKQ2o3;q^fJ]GO`2j?!!),"dbBQjhNDt4P$XJoaoVPCN_4U]((qts=)hCkjsj<&!!&>j8M>YDLpN'hZA^g+<bqa96B2DP8p]8)B<hY$'%P$9!!)+*M/uOeds%qG8^GH-N]R4@'LbOSQs6g%DM1t84mkl#m,<X;%:!!#>UUA>]/Y.!hVRL,O`k*c8MR\WZV^KCd/]O9YsddsNT!!#KcEKu<P6((s]36^'MI7XD>de2PR+Ir&`363qnZ.*`4&-)\7S9KO*PAj"1ENg:5A#\F;!)+.t3:@>:>J[jQ39>.MSXP'/UB(Z\[t+'ViJ`fW+KJ$qQ9YEg:D[_uF)/R:5<'_rc382-+9\4^W<Ee:S.C2B@H!0%49>f/+95<W6kPDtD@\]K"_YGd`l<!@!1Ga.(PH&&%:!BqQDG(?nt3#BSSOPBg9,T]Sf#=ZM7'R,UcJ^*"F!!(l4hM^NogY*G;Zt7Z)gXH3'SKrY)XN5L+DFdp,$0o"&!!'QH9r>6ae]F0Tbp7^h5)B7>5'PuW.=D!>?/k1[^fQ!7!!&m;g@K9>F.9#G="`KRhGO=RA$VDe<5C:_546teO!8g=!!(]*)fdYnC.p`hCpGlQ/tW+DJ_,96SYXRmnU40l]?#tM!!'"`0]=DbYtUW,2'rGL/(^^6%:<@e+UAPY<@++U8LZAJ0"0`e-V[/^3KdR\am#ib`U'Ao-%^5M"O!91TqSoT4ERNT+rj0R7&O8o:>`FLEEb&QCsg/SdhRlES3!)&;cV`%ZrM/RSLhcH?Cp&P.aI,j8H4/b.@"MmMHT;BQG!!)8R9pW)_*$8PC*&U$daghBOrYZBh:e[0EiqmI%hq_%T!20'WHkgYkh5kPtKJ3Lp75e;k!!&U2>b%l92*k>i>_9es0sq!(lhE#j3EkM]%:`:pY^^3q^<8US%qd/X/2Cik-bFbp8FldJ`F";c%Y&.k-G'3:Kf6Og2fFCGX@cVe6Q!:&)]99Ef9O.4)XOhi^J=TAGDIjc+_"2F2Xbj0*0BhrjO!+_6Uh3lR^Q0Hf\DB:gESH&Z+\F?]u,^klj7GgSLqdhki!%%m0+no"^]pI^4hf+A:-ia8+.2h\_4`WnX?%3n$=PqX/!3GVqCN:C&*=Btf_n&4AC]FHX=[*0o5Lcb:_Q&Q)YELi!%:Td*tG!*O&=*L^Q?bBbRE*Rq/4#ljr5dqSha<b$rGKOq,kc-n3D!*d\MJabf%,W*h3%JW0:qu?_h$QglOb!3!'Q5]`Dc*qfq!#C8kLB?$[2=">\_Y#S)63%!U'!%j`eZ2i]\u\C'eupq3!:*Kji<gT:B*KkDb>rfs%gN(7X<X2,R':>c=Qi:XQ5UN6!!!TlVG<CAh7/IKXN*3a$"4YNe]"dO1-Pq+G404`Y]U`VpAFskfTT^B*99Q/%:qi9]3hKqk^;ZioB!!%AhiB5\'_GO'G/%!Dq@mU.qqNWOrEX(S$W?u.08(kg>!!#`0En$JZe0[g5H2ZtM^>Anj47W88ig])Mf)Xq_Gj6[^!'nr19o^,*glO!L+.0J4\a\)O+Ak%*nVB.-8tm&i9H;)\Xo(`j!3_Y$&f7,gLX#pWB?nqYWrN-%.l+b>Q`f>Yq`+Q@I65+B!#\RYQd\R<MVa@@mq_I[]`8%r]'28eOa:^\]oR'K3#oM6%:X+662!7;hZC&0r?RJ,(BoQC!?I/j8>*i'n,0Bcj@%3;;&ddQB"!#bX>4MdXCc].`8HgV2h4TGK5VS&^ZkKhR`j9]i-XuHRb!)e9--;Z"[Q(LI_Kq[\TjT#:*0URGF):ZPKP(qJ/)0o$Y!%lIbPp]WuI^d^TBB\aR$ig9u?XrgtD7n=H*_cSV.`U3C!$'jQa5TgSg+%+0)@<:5(]XP1(nY6_8?kDG$u8G+W`1_R!)tJ?TU4MlJD5JN%:o!.9KZFu"V_uKcU.%Z&23Wr`aY/;Op>$H+L!4r\D1V.t'5/'b@0=dXF6N@+%rk3q5.bQ3,qrrCm+.sDM!+7gggH?uCW'ko&-1G%%U&Y0'q8:8%MgD32@ei+a';Iko!-kP%6sePl>ZJ42U$V7]`W-!PO>GHZbZkDP;HO/AR76]I!8RT2T)69]pA,jQnFeD)rr<%n1QaQlC9V=M/SiqAn\/i?!'s\t[2de+3&Kl^]:.21D?'[i$YX<W%:P0ImViCLqEd\fQ]1D._/!7b*DZdQaf*OKe325[L?[/^3c-qJ4UBDWa)1C4AoNaEh-!144uOiKc&KMTt3n*q%%`W,uVO'gZ'd5a%8/u66kdCk,3!+9-.f4XCV&:&,F:9sZdHiO.gfEXs[WSQ4>2ANfYZJP?V!-iJ";g2j;6(ai+qHdUOOT5A*^]uD^D-kSQDG>7,7@+D_!7iC^%If7gF1=JRgV&0D#64`WZ<;)Wp.I-H7JNbXec`?3%:X)J1A!(,@@^(rs]e5qIWpc")UTE"s>7$2%K(Q%oubFj=;[3!Tn!5:4f#utci0>#aRSFb;n$31'5i9fOdQDSaoCZjgpl0H:g!8E&]]lr\Zah_"a;eI1P<WE-N9XBeXf%O`_n_RtWF*@fg!-bAh>IpQ*3I"_(<&nqj<<*#Ah3>KbeMYF0;Ko?F2i/IR!8:BgQhR7P;lZlF<`RaFXT/@(WiN8)/$GI@-_P1]FZ#?_!:-Y('86%inK,c'%:3SgsI.r?2u*<6*>WsYFCG^[7KhGA-X=5jYh!;Fe39"bhn8=njrFLs?Lh>dPN;Es%hoC1NI)mW$.FkMrY!&%*[KsPj@B$Wsg8=5?'a8c2uTZS.#.?s"_O0NsDn26[8!+q17?u)qcj/F7VS,rC9HiO-Kl-IH'!$q\j!0]ldCh7#T!+KbU!!5\Z@<?'[Bl.D]!<<,L<^^Y3F8u?g<E"![Bl7Pd!!!(C6$,$c@Wcd(88i<TAT@bN_]!YD%:!!+cMATDj2ARfgrG%F0a!$Q&e!!*9uE)0qX56(Z`q+Z#7!"]/"9h]8BF8u=,9i(unL.4]8!(:a887c3r"9LkfH#7#/CeOg0Bju*kEd7WbI77s`D.RTJ!WX?&6>URMCB+Ce<`9/%!d$qQ!/"^!BPCsTFEoqT!N&h)@P@dQ!!5Dr:i^Jn9JQeQ?oJ'qARoq(AH75\!"D4a6q2)c"AD1$Ci=>P!)NXqc:hqiAPces"k[8jo1_tgPu&PT%:J;-2s!&$ZIF(o,D&8V=H0NeBG!WXp7!-q6DBEF8bBkKj<!d@!e"Y^:!!j;TC7s/NVATIhPPZ8#Q#A4=(;fHYG!-E>g!D>-PBE/%N9OW3XEW?)=!(o*LCbucC3<6$KEc6)>!!"B4#Rk`oDg,ao!!+/BciK4o!'pSbfDkmOc2c,ic2c,ic2c,ic2c,q!!(:Ec8,JK!%.ao!%.ao!%/;m!%.d!8HM0X5la1N5l`\Bn,W%[9EG39iuFV!%:F9(e2ciCuan7_m#!&jq^f`<c.7#,n@!qQH>2ZZSP>6"_H!DB<j9`\#is5Se5-NOR8!JLN-!/1D#""K?6K`FOA2%K3Xo>_/)!Vc@@!!(7DD$Mp#nA>8O!rug40*)J7!WXeP!.>SH)$'7/'PsWH0/j^W3uQWNP\C;((>*+!2&n:M"V1#'8-2)*!'"g%!3ZHJ:B40"4W14DciM`S!:p3d3rqVI0`XE@A30e\!/<s.5\rAA6tKkHj/QB?%:A7Y`Arr<$!S=0EA%:~>%%EndAGDEmbeddedDoc%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{dup where not{AltsysSepDict}if 3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{/cntr 0 def2 copy readstring{{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop}ifcntr 0 gt{pop 2 copydup length cntr sub cntr getintervalreadbinarystring} ifpop exch pop} bdf/_NXLevel2 defed { _NXLevel2 not { /colorimage where {userdict eq {/_rci false def } if} if} if} if/md defed{ md type /dicttype eq { /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if}if }if/setstrokeadjust defed{true setstrokeadjust/C{curveto}bdf/L{lineto}bdf/m{moveto}bdf}{/dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf/C{dr curveto}bdf/L{dr lineto}bdf/m{dr moveto}bdf/setstrokeadjust{pop}bdf }ifelse/privrectpath { 4 -2 roll mdtransform round exch round exch idtransform 2 copy 0 lt exch 0 lt xor{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}ifelseclosepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed {/_bfh {/_fonthacksave currentpacking def false setpacking} bdf/_efh {_fonthacksave setpacking} bdf}{/_bfh {} bdf/_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` { false setoverprint /-save0- save def5 index concatpopstorerect left bottom width height rectclippop/MMdict_count countdictstack def/MMop_count count 1 sub defuserdict begin/showpage {} def0 setgray 0 setlinecap 1 setlinewidth0 setlinejoin 10 setmiterlimit [] 0 setdash newpath} bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1 statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelseend def/printerRes gsavematrix defaultmatrix setmatrix72 72 dtransformabs exch absmaxgrestoredef/graycalcs[{Angle Frequency} {GrayAngle GrayFrequency} {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps {forcemaxsteps{maxsteps}{/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelseprinterRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if }ifelse} bdf/nextrelease defed { /languagelevel defed not { /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if}if}iffhnumcolors 1 ne {/calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {currentpagedevice /PreRenderingEnhance known{currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if} if} if/gradfrequency 144 defprinterRes 1000 lt {/gradfrequency 72 def} if/adjnumsteps {dup dtransform abs exch abs max printerRes div gradfrequency mul round 5 max min }bdf/goodsep {spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted? 0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{systemdict /packedarray known {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse{ /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx}{ /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}ifelse}bdf/i{dup 0 eq{pop df dup} {dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{ {/filler /eofill load def /clipper /eoclip load def}{/filler /fill load def /clipper /clip load def}ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{/NF exch def { exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length /Len exch def dup length Len add string dup Len 4 -1 roll putinterval dup 0 4 -1 roll putinterval }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{ dup FontDirectory exch known {pop 3 -1 roll pop} {RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch pop findfont 3 -1 roll pop}{pop dup findfont dup maxlength dict CD dup dup/Encoding exch /Encoding get 256 array copy 7 -1 roll {3 -1 roll dup 4 -2 roll put}forall put definefont}ifelse}bdf/RCJ{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFJ{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCJ} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFJ{dup hasfont not { pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse }if}bdf/FFJ{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get dup length 256 eq{256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }{7 -1 roll pop pop pop pop pop findfont}ifelse}ifelse_efh}bdf/GS {dup hasfont {findfontexch makesetfontexchpopts}{pop pop popts} ifelse} bdf/RCK{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFK{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCK} ifelse}bdf/hasfont{/resourcestatus where {pop /Font resourcestatus{ pop pop true}{ false}ifelse}{dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse}ifelse}bdf/FDFK{dup hasfont not { pop/JCsmhasfont {/JCsm}{/Courier}ifelse }if}bdf/FFK{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCTC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFTC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCTC} ifelse}bdf/FDFTC{dup hasfont not { pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse }if}bdf/FFTC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/RCSC{4 -1 roll /ourvec xdf 256 string cvs (|______) anchorsearch{pop cvn dup FDFSC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse}{pop} ifelse}bdf/RFSC{ dup FontDirectory exch known {pop 3 -1 roll pop} {RCSC} ifelse}bdf/FDFSC{dup hasfont not { pop/zh-gbscript-1.11hasfont {/zh-gbscript-1.11}{/Courier}ifelse }if}bdf/FFSC{_bfhdup 256 string cvs (|______)exch MN cvn dup FontDirectoryexch known { exch pop findfont 3 -1 roll pop }{ pop FDFSC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont }ifelse_efh}bdf/fps{currentflat exch dup 0 le{pop 1}if {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont {/Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 muladd add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor { max max max } ndf/maxspot {pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{0 1 2 index length 1 sub{ 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put}for4 1 roll pop pop pop}bdf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx]cvx image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image}ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{aload pop (_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage}ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{aload pop(_vc_Registration) eq {pop pop pop pop separationimage}{/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage}ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor { spots exch getdup 4 get (_vc_Registration) eq{pop 1 exch sub setseparationgray}{0 5 getinterval exch setcustomcolor}ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdfuserdict /islevel2systemdict /languagelevel known dup{pop systemdict /languagelevel get 2 ge} ifputislevel2 not{/currentcmykcolor{0 0 0 1 currentgray sub} ndf} if/tc{gsavesetcmykcolor currentcmykcolorgrestore} bind def/testCMYKColorThrough{tc add add add 0 ne} bind def/fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput}{ pop }ifelse/bc4 [0 0 0 0] def /_lfp4 {1 pop /yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdfc1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round height abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/bcs [0 0] def /_lfs4 {/yt xdf /xt xdf /ang xdf storerect/taperfcn xdf/tint2 xdf /tint1 xdf bcs exch 1 exch put tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round height abs adjnumsteps dup 2 lt {pop 2} if 1 sub /numsteps1 xdfcurrentflat mark currentflat clipflatness /delta top bottom sub numsteps1 1 add div def /right right left sub def /botsv top delta sub def {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfs6 {/tint2 xdf /tint1 xdf bcs exch 1 exch put /inrad xdf /radius xdf /yt xdf /xt xdf tint1 tint2 sub abs bcs 1 get maxspot calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/_rfp6 {1 pop /k2 xdf /y2 xdf /m2 xdf /c2 xdf/k1 xdf /y1 xdf /m1 xdf /c1 xdf/inrad xdf /radius xdf /yt xdf /xt xdf c1 c2 sub absm1 m2 sub absy1 y2 sub absk1 k2 sub absmaxcolor calcgraysteps mul abs round radius inrad sub abs adjnumsteps dup 1 lt {pop 1} if 1 sub /numsteps1 xdfradius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 2 div /halfstep xdf currentflat mark currentflat clipflatness {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse}loopcleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{AltsysDict /cvc 2 index put aload length dup 4 eq{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}{6 eq {sethexcolor} {setspotcolor} ifelse }ifelse}bdf 0 setseparationgray/imgr {216 15658 852 15876 } def /bleed 0 def /clpr {216 15658 852 15876 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def userdict begin /AGDOrigMtx matrix currentmatrix def end vms-216 -15658 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor]defn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1]vcvms361 15875 m488 15875 L497.389 15875 505 15867.389 505 15858 C505 15676 L505 15666.6112 497.389 15659 488 15659 C234 15659 L224.6112 15659 217 15666.6112 217 15676 C217 15858 L217 15867.389 224.6112 15875 234 15875 C361 15875 L2 w10 M[0.6941 0.5765 0.5765 0.949]vcs n216 15832 m506 15832 L[0 0 0 1]vc[2 2 ] 0 dS [] 0 dn216 15789 m506 15789 L[2 2 ] 0 dS [] 0 dn216 15746 m506 15746 L[2 2 ] 0 dS [] 0 dn216 15811 m506 15811 L[8 4 ] 0 dS [] 0 dn216 15767 m506 15767 L[8 4 ] 0 dS [] 0 dn216 15854 m506 15854 L[8 4 ] 0 dS [] 0 dn216 15724 m506 15724 L[8 4 ] 0 dS [] 0 dn216 15681 m506 15681 L[8 4 ] 0 dS [] 0 dn216 15703 m506 15703 L[2 2 ] 0 dS [] 0 dn707 15875 m834 15875 L843.389 15875 851 15867.389 851 15858 C851 15676 L851 15666.6112 843.389 15659 834 15659 C580 15659 L570.611 15659 563 15666.6112 563 15676 C563 15858 L563 15867.389 570.611 15875 580 15875 C707 15875 L[0.6941 0.5765 0.5765 0.949]vcs n562 15789 m852 15789 L[0 0 0 1]vcS n562 15746 m852 15746 LS n562 15811 m852 15811 LS n562 15767 m852 15767 LS n562 15854 m852 15854 LS n562 15724 m852 15724 LS n562 15681 m852 15681 LS n562 15703 m852 15703 LS n562 15832 m852 15832 LS nvmrs851 15855 m852 15855 L852 15854 L565 15831 L564 15831 L564 15832 LS n848 15832 m849 15832 L849 15831 L563 15809 L562 15809 L562 15810 LS n848 15790 m849 15790 L849 15789 L563 15766 L562 15766 L562 15767 LS n848 15812 m849 15812 L849 15811 L563 15789 L562 15789 L562 15790 LS n848 15747 m849 15747 L849 15746 L563 15724 L562 15724 L562 15725 LS n848 15767 m849 15767 L849 15766 L563 15743 L562 15743 L562 15744 LS n504 15852 m216 15810 L3.863693 M[8 4 ] 0 dS [] 0 dn504 15810 m216 15768 L[8 4 ] 0 dS [] 0 dn504 15768 m216 15726 L[8 4 ] 0 dS [] 0 dn504 15726 m216 15684 L[8 4 ] 0 dS [] 0 dn504 15828 m216 15786 L[2 2 ] 0 dS [] 0 dn504 15786 m216 15744 L[2 2 ] 0 dS [] 0 dn504 15744 m216 15702 L[2 2 ] 0 dS [] 0 dn504 15702 m216 15852 L[8 4 ] 0 dS [] 0 dn504 15684 m216 15830.6875 L[2 2 ] 0 dS [] 0 dn850 15726 m851 15726 L851 15725 L565 15703 L564 15703 L564 15704 L3.863708 MS n852 15705 m853 15705 L853 15704 L567 15682 L566 15682 L566 15683 LS n852 15681.3125 m564 15852 LS nvmrvmrend%%Trailer